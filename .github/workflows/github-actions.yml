name: CI Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies and run tests for frontend
        run: |
          cd frontend
          npm install
          npm audit
          npm test -- --forceExit

      - name: Set environment variables for frontend build
        run: |
          export SORT_URL=http://34.116.133.96:80/sort
          export IS_PRIME_URL=http://34.116.129.149:80/isPrime

      - name: Install dependencies and run tests for is-prime
        run: |
          cd is-prime
          npm install
          npm audit
          npm test -- --forceExit

      - name: Install dependencies and run tests for sortArray
        run: |
          cd sortArray
          npm install
          npm audit
          npm test -- --forceExit

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Google Container Registry
        run: |
          cat <<EOF > key.json
          ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          EOF
          gcloud auth activate-service-account --key-file=key.json
          gcloud --quiet config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud auth configure-docker

      - name: Build and push frontend
        run: |
          cd frontend
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend:latest

      - name: Build and push is-prime
        run: |
          cd is-prime
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/is-prime:latest .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/is-prime:latest

      - name: Build and push sortArray
        run: |
          cd sortArray
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/sort-array:latest .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/sort-array:latest

      - name: Install Google Cloud SDK
        run: |
          echo "Installing Google Cloud SDK..."
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates gnupg curl
          echo "Adding Google Cloud SDK APT repository..."
          curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          echo "deb [arch=amd64] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
          sudo apt-get update
          sudo apt-get install -y google-cloud-sdk

      - name: Authenticate gcloud and configure kubectl
        run: |
          gcloud auth activate-service-account --key-file=key.json
          gcloud --quiet config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud --quiet config set compute/zone europe-central2
          gcloud container clusters get-credentials cluster-1

      - name: Install gke-gcloud-auth-plugin
        run: |
          sudo apt-get update
          sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

      - name: Deploy to GKE
        run: |
          gcloud container clusters get-credentials cluster-1 --zone europe-central2 --project ${{ secrets.GCP_PROJECT_ID }}
          kubectl apply -f k8s/deployment-frontend.yaml --validate=false
          kubectl apply -f k8s/deployment-is-prime.yaml --validate=false
          kubectl apply -f k8s/deployment-sort-array.yaml --validate=false
